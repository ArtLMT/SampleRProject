# COMP1810 - Data Analysis Project

This is the sample project for Data Analysis. We will study:

-   how to create Rproject

-   using Rmd

-   structure the folders and files

-   Step-by-step data analysis

```{r}
# Example block code
#df <- penguins
#summary(df)
```

## Step 0: Loading packages

```{r}
install.packages("here")
```

```{r}
library(tidyverse)
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(Hmisc)
```

## Step 1: Read & Understand Data

To understand the data, we have to answer some questions:

1.  What is the shape of dataset? How many rows, how many cols?

    ```{r}
    df <- read_csv("../data/data.csv", show_col_types = FALSE)
    #dim(df)
    #nrow(df)
    #ncol(df)
    cat("The dimension of dataset: number of columns", ncol(df), "number of rows: ", nrow((df)))
    ```

2.  What variables are categorical, numerical, datetime?

    To check the variable with double or numeric type is a categorical column or not, we need to check the distinct (unique) values

    ```{r}
    str(df) # Structure of dataset
    ```

    ```{r}
    describe(df) # provide description for each column
    ```

    ```{r}
    df %>% count(y)
    ```

    **Conclusion**: This dataset has 3 numerical variables `x_1, x_2, x_3`, 1 categorical variable `y`(because it has 2 values only `0` and `1`).

3.  Do we have any issues in this dataset?

    missing values?

    inconsistent types, values?

    duplicate values?

    ```{r}
    names(df) # list all columns of dataset
    colnames(df)
    ```

    ```{r}
    numerical_cols <- names(df)[sapply(df, is.numeric)]
    numerical_cols
    ```

    ```{r}
    # check missing values
    colSums(is.na(df))
    ```

    Conclusion: There is no error (issue) in this dataset.

    ```{r}
    install.packages("skimr")
    library(skimr)
    ```

## Step 2: Explore Dataset - EDA

-   Univariate analysis

    ```{r}
    num_cols <- c("x", "x2", "x3")
    cat_cols <- y
    ```

    ```{r}
    for (col in num_cols){
      vec <- df[[col]]
      print(vec)
      print(class(vec))
      print('=================')
    }
    ```

    ```{r}
    plot_and_save_numeric_cols <- function(df, outdir="../outputs/univariate"){
      if (!dir.exists(outdir)){
        dir.create(outdir, recursive=TRUE)
      }
      for (col in names(df)){
        if (is.numeric(df[[col]])){
          file_path <- file.path(outdir, paste0(col, "_hist_box.png"))
          print(file_path)
          png(file_path, width=1000, height=500)
          par(mfrow=c(1,2))
          hist(df[[col]], main=paste0("Histogram of ", col), col='blue', border='black')
          boxplot(df[[col]], main=paste0("Boxplot of ", col), horizontal = TRUE, col = 'pink')
          dev.off()
        }
      }
      print("All done!!!")
    }

    ```

    ```{r}
    plot_and_save_numeric_cols(df)
    ```

#  Example 2: Using 

```         
penguins data
```

## Step 1: read & understand data

```{r}
df_pen <- penguins
```

```{r}
class(df_pen$year)
```

```{r}

```

## Step 2: EDA

## Step 3: Pre-process
